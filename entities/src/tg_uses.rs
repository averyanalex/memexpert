//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.4

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "tg_uses")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i64,
    pub timestamp: DateTime,
    pub user_id: i64,
    pub chosen_meme_id: Option<i32>,
    pub chosen_meme_source: Option<String>,
    pub query: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::memes::Entity",
        from = "Column::ChosenMemeId",
        to = "super::memes::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Memes,
}

impl Related<super::memes::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Memes.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
