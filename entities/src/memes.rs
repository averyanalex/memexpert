//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.10

use super::sea_orm_active_enums::MediaType;
use super::sea_orm_active_enums::PublishStatus;
use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "memes")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    #[sea_orm(unique)]
    pub slug: String,
    pub creation_time: DateTime,
    pub created_by: i64,
    pub last_edition_time: DateTime,
    pub last_edited_by: i64,
    pub publish_status: PublishStatus,
    pub source: Option<String>,
    #[sea_orm(unique)]
    pub control_message_id: i32,
    pub text: Option<String>,
    pub media_type: MediaType,
    pub mime_type: String,
    pub width: i32,
    pub height: i32,
    pub duration: i32,
    #[sea_orm(unique)]
    pub tg_unique_id: String,
    pub tg_id: String,
    pub content_length: i32,
    pub thumb_mime_type: String,
    pub thumb_width: i32,
    pub thumb_height: i32,
    pub thumb_tg_id: String,
    pub thumb_content_length: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::slug_redirects::Entity")]
    SlugRedirects,
    #[sea_orm(has_many = "super::tg_uses::Entity")]
    TgUses,
    #[sea_orm(has_many = "super::translations::Entity")]
    Translations,
    #[sea_orm(has_many = "super::web_visits::Entity")]
    WebVisits,
}

impl Related<super::slug_redirects::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::SlugRedirects.def()
    }
}

impl Related<super::tg_uses::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::TgUses.def()
    }
}

impl Related<super::translations::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Translations.def()
    }
}

impl Related<super::web_visits::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::WebVisits.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
